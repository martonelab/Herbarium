higher <- classification(df_nm$Genus, db="bold")
read_xlsx("Master-Collector-Excel-Templates-20190429.xlsx",2)
read_xlsx("Master-Collector-Excel-Templates-20190429.xlsx",sheet = 2, skip = 4)
collector_a <- read_xlsx("Master-Collector-Excel-Templates-20190429.xlsx",sheet = 2, skip = 4)
empty <- collector_a[FALSE,]
for(i in 1:length(higher)) {
if(!is.na(higher[i])) {
species <- higher[[i]]
rect <- c(species$name)
names(rect) <- c(species$rank)
rect["species"] <- str_split(rect["species"]," ")
empty <- empty %>%
add_row(Phylum = rect["phylum"],
Class = rect["class"],
Genus = rect["genus"],
Species = rect["species"][[1]][[2]])
}
else{empty <- empty %>%  add_row(Phylum = NA)}
}
higher
View(higher)
for(i in 1:length(higher)) {
if(!is.na(higher[i])) {
species <- higher[[i]]
print(species)
rect <- c(species$name)
print(rect)
names(rect) <- c(species$rank)
#rect["species"] <- str_split(rect["species"]," ")
empty <- empty %>%
add_row(Phylum = rect["phylum"],
Class = rect["class"],
Genus = rect["genus"],
Species = rect["species"][[1]][[2]])
}
else{empty <- empty %>%  add_row(Phylum = NA)}
}
for(i in 1:length(higher)) {
if(!is.na(higher[i])) {
species <- higher[[i]]
rect <- c(species$name)
print(rect)
names(rect) <- c(species$rank)
#rect["species"] <- str_split(rect["species"]," ")
empty <- empty %>%
add_row(Phylum = rect["phylum"],
Class = rect["class"],
Genus = rect["genus"],
Species = rect["species"][[1]][[2]])
}
else{empty <- empty %>%  add_row(Phylum = NA)}
}
higher[1]
higher[[1]]
sp <- higher[[1]]
sp$name
rect <- sp$name
rect
rect <- c(sp$name)
rect
names(rect <- sp$rank)
sp
sp$rank
names(rect) <- c(species$rank)
higher <- classification(df_nm$Genus, db="bold")
empty <- collector_a[FALSE,]
for(i in 1:length(higher)) {
if(!is.na(higher[i])) {
species <- higher[[i]]
rect <- c(species$name)
print(rect)
names(rect) <- c(species$rank)
empty <- empty %>%
add_row(Phylum = rect["phylum"],
Class = rect["class"],
Genus = rect["genus"])
}
else{empty <- empty %>%  add_row(Phylum = NA)}
}
higher <- classification(df_nm$Genus, db="bold")
View(empty)
View(empty)
View(empty)
View(empty)
empty <- collector_a[FALSE,]
for(i in 1:length(higher)) {
if(!is.na(higher[i])) {
species <- higher[[i]]
rect <- c(species$name)
names(rect) <- c(species$rank)
empty <- empty %>%
add_row(Phylum = rect["phylum"],
Class = rect["class"],
Genus = rect["genus"])
}
else{empty <- empty %>%  add_row(Phylum = NA)}
}
taxon <- empty
## select columns
herb=taxon %>%
select(`PTM#`, Herbarium, LabelQty, Phylum, Genus, )
meta <- new %>%
mutate(name = paste0("PTM", new$`PTM#`))%>%
filter(name %in% ptm$`Collector Number`) %>%
mutate(Herbarium = "UBC",
LabelQty = 1)
meta <- df %>%
mutate(Herbarium = "UBC",
LabelQty = 1)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, Phylum, Genus, )
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, Genus, )
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty)
View(gs_master)
View(taxon)
taxon <- cbind(df, empty$Phylum,empty$Class,empty$Genus,empty$Species)
meta <- taxon %>%
mutate(Herbarium = "UBC",
LabelQty = 1)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty,Phylum, Class,Genus, Species,)
meta$`empty$Phylum`
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty,empty$Phylum,empty$Class,empty$Genus,empty$Species)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty) %>%
cbind(empty$Phylum,empty$Class,empty$Genus,empty$Species)
herb
meta <- df_nm %>%
mutate(Herbarium = "UBC",
LabelQty = 1)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty) %>%
cbind(empty$Phylum,empty$Class,empty$Genus,empty$Species)
herb
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty) %>%
cbind(empty$Phylum,empty$Class,empty$Genus,species)
df_nm$Species
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty) %>%
cbind(empty$Phylum,empty$Class,empty$Genus,Species)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty) %>%
cbind(empty$Phylum,empty$Class,empty$Genus) %>%
select(Species)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty) %>%
cbind(empty$Phylum,empty$Class,empty$Genus) %>%
select(Species)
herb %>%
cbind(Species)
herb %>%
cbind(meta$Species)
meta <- df_nm %>%
mutate(Herbarium = "UBC",
LabelQty = 1) %>%
cbind(empty$Phylum,empty$Class,empty$Genus)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty,empty$Phylum,empty$Class,empty$Genus,Species)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, empty$Phylum, empty$Class, empty$Genus, Species)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, `empty$Genus`, Species)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, `empty$Genus`, Species)
herb
# check
names <- cbind(df$`Final determination`, df$`Determination in the field`, df$`genetic match/notes`, df_nm$gs)
# check
names <- cbind(df$`Final determination`, df$`Determination in the field`, df$`genetic match/notes`, df_nm$gs)
# check
names <- cbind(df$`Final determination`, df$`Determination in the field`, df$`genetic match/notes`s)
df_nm <- df %>%
mutate(gs = if_else(is.na(df$`Final determination`),
df$`Determination in the field`,
df$`Final determination`)) %>%
separate(gs, c("Genus","Species"))
# check
names <- cbind(df$`Final determination`, df$`Determination in the field`, df$`genetic match/notes`, df_nm$gs)
# check
names <- cbind(df$`Final determination`, df$`Determination in the field`, df$`genetic match/notes`)
names
df_nm <- df %>%
mutate(gs = if_else(is.na(df$`Final determination`),
df$`Determination in the field`,
df$`Final determination`)) %>%
separate(gs, c("Genus","Species"))
help("separate")
df_nm <- df %>%
mutate(gs = if_else(is.na(df$`Final determination`),
df$`Determination in the field`,
df$`Final determination`)) %>%
separate(gs, c("Genus","Species"), " ")
# check
names <- cbind(df$`Final determination`, df$`Determination in the field`, df$`genetic match/notes`)
df_nm <- df %>%
mutate(gs = if_else(is.na(df$`Final determination`),
df$`Determination in the field`,
df$`Final determination`)) %>%
separate(gs, c("Genus","Species"), " ")
# check
names <- cbind(df$`Final determination`, df$`Determination in the field`, df$`genetic match/notes`)
higher <- classification(df_nm$Genus, db="bold")
empty <- collector_a[FALSE,]
for(i in 1:length(higher)) {
if(!is.na(higher[i])) {
species <- higher[[i]]
rect <- c(species$name)
names(rect) <- c(species$rank)
empty <- empty %>%
add_row(Phylum = rect["phylum"],
Class = rect["class"],
Genus = rect["genus"])
}
else{empty <- empty %>%  add_row(Phylum = NA)}
}
meta <- df_nm %>%
mutate(Herbarium = "UBC",
LabelQty = 1) %>%
cbind(empty$Phylum,empty$Class,empty$Genus)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, `empty$Genus`, Species)
herb
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus, Species)
herb
meta <- df_nm %>%
mutate(Herbarium = "UBC",
LabelQty = 1,
Qualifier = "") %>%
cbind(empty$Phylum,empty$Class,empty$Genus)
help(get_classification)
itis <- classification(df_nm$Genus, db="itis")
itis
itis <- classification(df_nm$gs, db="itis")
itis <- classification(df_nm$gs, db="itis")
itis_2 <- classification(df_nm$Genus, db="itis")
itis_2 <- classification(df_nm$gs, db="itis")
df_nm$gs
df_nm <- df %>%
mutate(gs = if_else(is.na(df$`Final determination`),
df$`Determination in the field`,
df$`Final determination`)) %>%
separate(gs, c("Genus","Species"), " ")
gs = choice) %>%
df_nm <- df %>%
mutate(choice = if_else(is.na(df$`Final determination`),
df$`Determination in the field`,
df$`Final determination`)
gs = choice) %>%
df_nm <- df %>%
mutate(choice = if_else(is.na(df$`Final determination`),
df$`Determination in the field`,
df$`Final determination`),
gs = choice) %>%
separate(gs, c("Genus","Species"), " ")
df_nm$choice
df_nm <- df %>%
mutate(choice = if_else(is.na(df$`Final determination`),
df$`Determination in the field`,
df$`Final determination`),
gs = choice) %>%
separate(choice, c("Genus","Species"), " ")
itis_2 <- classification(df_nm$gs, db="itis")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
library(googlesheets)
library(here)
library(taxize)
file <- "Master Collector Excel Templates_Kyra2019.xlsx"
s_num <- 2
row_skip <- 4
original <- read_xlsx(here("./data/",file), sheet = s_num, skip = row_skip)
#removes rows that are not specimens (ie NA)
df_na <- filter(original, str_detect(original$`Collector Number`, "PTM"))
collector_a <- read_xlsx("Master-Collector-Excel-Templates-20190429.xlsx",sheet = 2, skip = 4)
library(googlesheets)
#library(googlesheets4) # future will be googlesheets4
#(ptm <- drive_get("PTM - Master List"))
#need to authenticate (see popup window)
mysheets <- gs_ls()
gs_master <- gs_title("PTM - Master List")
#gets the data
gs_ptm<- gs_read(gs_master)
#cleans up columns
colnames(gs_ptm) <- gs_ptm[1,]
new <- gs_ptm[-c(1,2),]
df <- new %>%
mutate(num = paste0("PTM",`PTM#`)) %>%
filter(num %in% df_na$`Collector Number`)
df_nm <- df %>%
mutate(choice = if_else(is.na(df$`Final determination`),
df$`Determination in the field`,
df$`Final determination`),
gs = choice) %>%
separate(choice, c("Genus","Species"), " ")
# check
names <- cbind(df$`Final determination`, df$`Determination in the field`, df$`genetic match/notes`)
higher <- classification(df_nm$Genus, db="bold")
#itis <- classification(df_nm$Genus, db="itis")
#itis_2 <- classification(df_nm$gs, db="itis")
empty <- collector_a[FALSE,]
for(i in 1:length(higher)) {
if(!is.na(higher[i])) {
species <- higher[[i]]
rect <- c(species$name)
names(rect) <- c(species$rank)
empty <- empty %>%
add_row(Phylum = rect["phylum"],
Class = rect["class"],
Genus = rect["genus"])
}
else{empty <- empty %>%  add_row(Phylum = NA)}
}
meta <- df_nm %>%
mutate(Herbarium = "UBC",
LabelQty = 1,
Qualifier = "") %>%
cbind(empty$Phylum,empty$Class,empty$Genus)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species)
View(herb)
higher <-
wh <- classification(df_nm$Genus, db="worms")
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species, #Species Authonr
Subspecies)
list(meta)
names(meta)
View(species)
View(wh)
wh[["Bossiella"]][["rank"]]
wh[["Bossiella"]][["name"]]
df_nm$Species
df$`Final determination`
df_nm$gs
higher <-
wh <- classification(df_nm$gs, db="worms")
View(species)
View(wh)
wh[["Bossiella mayae"]][["name"]]
wh[["Lithothamnion phymatodeum"]]
classification("Lithothamnion phymatodeum", db= "worms")
help("classification")
classification("Lithothamnion phymatodeum", db= "wormsid")
get_wormsid("Lithothamnion phymatodeum")
classification("Lithothamnion phymatodeum", db= "itis")
classification("Helianthus annum", db= "itis")
classification("Poa annua", db= "itis")
synonyms("Poa annua", db= "itis")
install.packages("taxize")
install.packages("taxize")
library(taxize)
classification("Lithothamnion phymatodeum", db= "worms")
wor <- classification("Lithothamnion phymatodeum", db= "worms")
wor[1]
install.packages(worrms)
install.packages("worrms")
install.packages("worrms")
wm_records_names("Lithothamnion phymatodeum")
library(worrms)
wm_records_names("Lithothamnion phymatodeum")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
library(googlesheets)
library(here)
library(taxize)
wh <- wm_records_names(df_nm$gs)
View(species)
View(wh)
rbind(wh)
map(wh,rbind)
map(wh,map(.,rbind))
map(wh,extract,"authority")
map(wh,"authority")
map(wh,c("phylum", "class",genus", "species",authority")
map(wh,c("phylum", "class",genus", "species",authority"))
map(wh,c("phylum", "class","genus", "species","authority"))
map(wh,"[",c("phylum", "class","genus", "species","authority"))
map(wh,"[",c("phylum", "class","genus", "species","authority"))
map(wh,`[``,c("phylum", "class","genus", "species","authority"))
map(wh,`[``,c("phylum", "class","genus", "species","authority"))
map(wh,`[`,c("phylum", "class","genus", "species","authority"))
map(wh,`[`,c("phylum", "class","valid_name","authority"))
wh[[3]][phylum]
wh[[3]]["phylum"]
map(wh,extract,c("phylum", "class","valid_name","authority"))
map_dfr(wh,extract,c("phylum", "class","valid_name","authority"))
got_char
got_chars
map(wh,"authority")
map_dfr(wh,"authority")
for(i in 1:length(wh)) {
if(!is.na(higher[i])) {
species <- higher[[i]]
empty <- empty %>%
add_row(Phylum = species$"phylum",
Class = species$"class",
Genus = species$"genus")
}
else{empty <- empty %>%  add_row(Phylum = NA)}
}
df_nm$gs
map(wh,"authority")
auth <- map(wh,"authority")
auth %>% map(., c)
auth %>% map(., c([1]))
auth %>% map(., c(x.[1]))
help(map)
auth %>% map(., c(.x[1]))
auth <- map_dfc(wh,"authority")
auth <- map_chr(wh,"authority")
auth <- map_chr(wh,`[`,"authority")
auth <- map_dfr(wh,`[`,"authority")
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species, #Species Authonr
Habitat)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species, #Species Authonr
Habitat, Depth)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species, #Species Authonr
Location,Habitat, Depth)
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species, #Species Authonr
Locality,latitude, longitude, Habitat, Depth, `Reproductive Status`, `Date Collected`, `Main Collector`, `PTM#`,Determiners, DeterminationDate, notes )
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species, #Species Authonr
Locality,Latitude, Longitude, Habitat, Depth, `Reproductive Status`, `Date Collected`, `Main Collector`, `PTM#`,Determiners, DeterminationDate, notes )
## select columns
herb <- meta %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species, #Species Authonr
Locality,Latitude, Longitude, Habitat, Depth, `Reproductive Status`, `Date Collected`, `Main Collector`, `PTM#`,Determiners, DeterminationDate, Notes )
herb
View(herb)
meta_k <- df_nm %>%
mutate(Herbarium = "UBC",
LabelQty = 1,
Qualifier = "",
Country = "Canada",
ProvinceState = "British Columbia",
Coralline = "Yes") %>%
cbind(empty$Phylum,empty$Class,empty$Genus) %>%
separate(Locality,c('smaller','larger'))
meta_k <- df_nm %>%
mutate(Herbarium = "UBC",
LabelQty = 1,
Qualifier = "",
Country = "Canada",
ProvinceState = "British Columbia",
Coralline = "Yes") %>%
cbind(empty$Phylum,empty$Class,empty$Genus) %>%
separate(Locality,c('smaller','larger'), sep = ",")
meta_k$smaller
meta_k <- df_nm %>%
separate(Locality,c('smaller','larger'), sep = ",") %>%
mutate(Herbarium = "UBC",
LabelQty = 1,
Qualifier = "",
Country = "Canada",
ProvinceState = "British Columbia",
Coralline = "Yes",
Location = paste(larger, ",", smaller)) %>%
cbind(empty$Phylum,empty$Class,empty$Genus)
kyra <- meta_k %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species, #Species Authonr
Country, ProvinceState, Location,Latitude, Longitude, Habitat, Depth, `Reproductive Status`, `Date Collected`, `Main Collector`, `PTM#`,Determiners, DeterminationDate, Notes, Coralline)
View(kyra)
meta_k <- df_nm %>%
separate(Locality,c('smaller','larger'), sep = ",") %>%
mutate(Herbarium = "UBC",
LabelQty = 1,
Qualifier = "",
Country = "Canada",
ProvinceState = "British Columbia",
Coralline = "Yes",
Location = paste(larger, ",", smaller),
ProjectID = "KyraCrusts2019") %>%
cbind(empty$Phylum,empty$Class,empty$Genus)
kyra <- meta_k %>%
select(`PTM#`, Herbarium, LabelQty, `empty$Phylum`, `empty$Class`, Genus,Qualifier, Species, #Species Authonr
Country, ProvinceState, Location,Latitude, Longitude, Habitat, Depth, `Reproductive Status`, `Date Collected`, `Main Collector`, `PTM#`,Determiners, DeterminationDate, Notes, Coralline)
write_csv(meta_k,"output/2019Sept24_KyraCoralline.csv")
